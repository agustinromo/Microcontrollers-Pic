CCS PCM C Compiler, Version 4.104, 5967               13-ago-17 20:13

               Filename: C:\Users\VAIOPC\Documents\ADATA\Microcontroladores\PIC C\pinball\pinball.lst

               ROM used: 121 words (12%)
                         Largest free fragment is 903
               RAM used: 6 (9%) at main() level
                         7 (11%) worst case
               Stack:    1 locations

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   004
0003:  NOP
0004:  CALL   3FF
0005:  BSF    03.5
0006:  MOVWF  10
0007:  MOVLW  00
0008:  MOVWF  0A
0009:  GOTO   01E
.................... #include "C:\Users\VAIOPC\Documents\ADATA\Microcontroladores\PIC C\pinball\pinball.h" 
.................... #include <12F675.h> 
.................... //////// Standard Header file for the PIC12F675 device //////////////// 
.................... #device PIC12F675 
.................... #list 
....................  
.................... #device adc=8 
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES INTRC_IO                 //Internal RC Osc, no CLKOUT 
.................... #FUSES NOCPD                    //No EE protection 
.................... #FUSES NOPROTECT                //Code not protected from reading 
.................... #FUSES NOMCLR                     //Master Clear pin enabled 
.................... #FUSES PUT                      //Power Up Timer 
.................... #FUSES BROWNOUT                 //Reset when brownout detected 
.................... #FUSES BANDGAP_HIGH           
.................... #FUSES RESERVED                 //Used to set the reserved FUSE bits 
....................  
.................... #use delay(clock=4000000) 
000A:  MOVLW  26
000B:  MOVWF  04
000C:  MOVF   00,W
000D:  BTFSC  03.2
000E:  GOTO   01D
000F:  MOVLW  01
0010:  MOVWF  21
0011:  CLRF   20
0012:  DECFSZ 20,F
0013:  GOTO   012
0014:  DECFSZ 21,F
0015:  GOTO   011
0016:  MOVLW  4A
0017:  MOVWF  20
0018:  DECFSZ 20,F
0019:  GOTO   018
001A:  GOTO   01B
001B:  DECFSZ 00,F
001C:  GOTO   00F
001D:  GOTO   06D (RETURN)
.................... #use rs232(baud=9600,parity=N,xmit=PIN_A3,rcv=PIN_A2,bits=8) 
....................  
....................  
....................   #ZERO_RAM 
.................... int8 sensor=0; 
.................... void main() 
.................... {  
001E:  MOVF   03,W
001F:  ANDLW  1F
0020:  MOVWF  03
0021:  MOVLW  3F
0022:  MOVWF  20
0023:  MOVLW  21
0024:  MOVWF  04
0025:  BCF    03.7
0026:  CLRF   00
0027:  INCF   04,F
0028:  DECFSZ 20,F
0029:  GOTO   026
002A:  CLRF   20
002B:  CLRF   04
002C:  MOVLW  1F
002D:  ANDWF  03,F
002E:  BSF    03.5
002F:  BCF    05.3
0030:  BCF    03.5
0031:  BSF    05.3
0032:  CLRF   24
0033:  BCF    1F.6
0034:  BSF    03.5
0035:  BCF    1F.0
0036:  BCF    1F.1
0037:  BCF    1F.2
0038:  BCF    1F.3
0039:  MOVLW  07
003A:  BCF    03.5
003B:  MOVWF  19
....................    setup_adc_ports(NO_ANALOGS|VSS_VDD); 
003C:  BCF    1F.6
003D:  BSF    03.5
003E:  BCF    1F.0
003F:  BCF    1F.1
0040:  BCF    1F.2
0041:  BCF    1F.3
....................    setup_adc(ADC_CLOCK_DIV_2); 
0042:  BCF    1F.4
0043:  BCF    1F.5
0044:  BCF    1F.6
0045:  BCF    03.5
0046:  BCF    1F.7
0047:  BSF    1F.0
....................    setup_timer_0(RTCC_INTERNAL|RTCC_DIV_1); 
0048:  BSF    03.5
0049:  MOVF   01,W
004A:  ANDLW  C7
004B:  IORLW  08
004C:  MOVWF  01
....................    setup_timer_1(T1_DISABLED); 
004D:  BCF    03.5
004E:  CLRF   10
....................    setup_comparator(NC_NC); 
004F:  MOVLW  07
0050:  MOVWF  19
0051:  BSF    03.5
0052:  MOVF   05,W
0053:  MOVWF  05
0054:  MOVLW  03
0055:  BCF    03.5
0056:  MOVWF  20
0057:  DECFSZ 20,F
0058:  GOTO   057
0059:  MOVF   19,W
005A:  BCF    0C.3
....................    setup_vref(FALSE); 
005B:  BSF    03.5
005C:  CLRF   19
....................  
....................    // TODO: USER CODE!!  
....................    while(TRUE)  
....................    { 
....................      sensor = input(PIN_A5); 
005D:  BSF    05.5
005E:  BCF    03.5
005F:  CLRF   24
0060:  BTFSC  05.5
0061:  INCF   24,F
....................      if(sensor == 1) 
0062:  DECFSZ 24,W
0063:  GOTO   074
....................      { 
....................        output_bit(PIN_A0, 1);  
0064:  BSF    05.0
0065:  BSF    03.5
0066:  BCF    05.0
....................        delay_ms(2000); 
0067:  MOVLW  08
0068:  BCF    03.5
0069:  MOVWF  25
006A:  MOVLW  FA
006B:  MOVWF  26
006C:  GOTO   00A
006D:  DECFSZ 25,F
006E:  GOTO   06A
....................        output_bit(PIN_A0, 0);  
006F:  BCF    05.0
0070:  BSF    03.5
0071:  BCF    05.0
....................      }  
....................       else 
0072:  GOTO   077
0073:  BCF    03.5
....................        { 
....................          output_bit(PIN_A0, 0); 
0074:  BCF    05.0
0075:  BSF    03.5
0076:  BCF    05.0
....................        } 
....................    } 
0077:  GOTO   05D
....................  
.................... } 
0078:  SLEEP

Configuration Fuses:
   Word  1: 3FC4   NOWDT NOCPD NOPROTECT NOMCLR PUT INTRC_IO BROWNOUT BANDGAP_HIGH
