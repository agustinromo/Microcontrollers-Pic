CCS PCH C Compiler, Version 4.104, 5967               21-nov.-16 16:32

               Filename: F:\documentos\Microcontroladores\PIC C\lector_devoltaje_18\lector_voltaje.lst

               ROM used: 266 bytes (1%)
                         Largest free fragment is 32502
               RAM used: 5 (0%) at main() level
                         5 (0%) worst case
               Stack:    1 locations

*
0000:  GOTO   00C0
.................... #include "F:\documentos\Microcontroladores\PIC C\lector_devoltaje_18\lector_voltaje.h" 
.................... #include <18F2550.h> 
.................... //////// Standard Header file for the PIC18F2550 device //////////////// 
.................... #device PIC18F2550 
.................... #list 
....................  
.................... #device adc=8 
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES WDT128                   //Watch Dog Timer uses 1:128 Postscale 
.................... #FUSES INTRC_IO                 //Internal RC Osc, no CLKOUT 
.................... #FUSES NOPROTECT                //Code not protected from reading 
.................... #FUSES NOBROWNOUT               //No brownout reset 
.................... #FUSES BORV20                   //Brownout reset at 2.0V 
.................... #FUSES PUT                      //Power Up Timer 
.................... #FUSES NOCPD                    //No EE protection 
.................... #FUSES STVREN                   //Stack full/underflow will cause reset 
.................... #FUSES NODEBUG                  //No Debug mode for ICD 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOWRT                    //Program memory not write protected 
.................... #FUSES NOWRTD                   //Data EEPROM not write protected 
.................... #FUSES IESO                     //Internal External Switch Over mode enabled 
.................... #FUSES FCMEN                    //Fail-safe clock monitor enabled 
.................... #FUSES PBADEN                   //PORTB pins are configured as analog input channels on RESET 
.................... #FUSES NOWRTC                   //configuration not registers write protected 
.................... #FUSES NOWRTB                   //Boot block not write protected 
.................... #FUSES NOEBTR                   //Memory not protected from table reads 
.................... #FUSES NOEBTRB                  //Boot block not protected from table reads 
.................... #FUSES NOCPB                    //No Boot Block code protection 
.................... #FUSES MCLR          //Master Clear pin enabled 
.................... #FUSES LPT1OSC                  //Timer1 configured for low-power operation 
.................... #FUSES NOXINST                  //Extended set extension and Indexed Addressing mode disabled (Legacy mode) 
.................... #FUSES PLL12                    //Divide By 12(48MHz oscillator input) 
.................... #FUSES CPUDIV4                  //System Clock by 4 
.................... #FUSES USBDIV                   //USB clock source comes from PLL divide by 2 
.................... #FUSES VREGEN                   //USB voltage regulator enabled 
....................  
.................... #use delay(clock=4000000) 
.................... #use rs232(baud=9600,parity=N,xmit=PIN_C6,rcv=PIN_C7,bits=8) 
....................  
....................  
....................   #ZERO_RAM  
....................    
.................... void conf();  
.................... void program(); 
.................... int8 valor; 
.................... void main() 
.................... {  
*
00C0:  CLRF   FF8
00C2:  BCF    FD0.7
00C4:  MOVLW  FE
00C6:  MOVWF  00
00C8:  MOVLW  08
00CA:  MOVWF  01
00CC:  MOVLW  02
00CE:  MOVWF  FE9
00D0:  MOVLW  00
00D2:  MOVWF  FEA
00D4:  CLRF   FEE
00D6:  CLRWDT
00D8:  DECFSZ 00,F
00DA:  BRA    00D4
00DC:  DECFSZ 01,F
00DE:  BRA    00D4
00E0:  CLRF   FEA
00E2:  CLRF   FE9
00E4:  MOVLW  60
00E6:  MOVWF  FD3
00E8:  MOVF   FD3,W
00EA:  BCF    FB8.3
00EC:  MOVLW  19
00EE:  MOVWF  FAF
00F0:  MOVLW  A6
00F2:  MOVWF  FAC
00F4:  MOVLW  90
00F6:  MOVWF  FAB
00F8:  MOVF   FC1,W
00FA:  ANDLW  C0
00FC:  IORLW  0F
00FE:  MOVWF  FC1
0100:  MOVLW  07
0102:  MOVWF  FB4
....................  conf();  
0104:  BRA    0004
....................  program(); 
0106:  BRA    0050
.................... } 
.................... void conf() 
.................... { 
0108:  SLEEP 
....................  
....................    setup_adc_ports(AN0|VSS_VDD); 
*
0004:  MOVF   FC1,W
0006:  ANDLW  C0
0008:  IORLW  0E
000A:  MOVWF  FC1
....................    setup_adc(ADC_CLOCK_DIV_2); 
000C:  BCF    FC0.0
000E:  BCF    FC0.1
0010:  BCF    FC0.2
0012:  BCF    FC0.7
0014:  BSF    FC2.0
....................    setup_spi(SPI_SS_DISABLED); 
0016:  BCF    FC6.5
0018:  BCF    F94.7
001A:  BSF    F93.0
001C:  BCF    F93.1
001E:  MOVLW  01
0020:  MOVWF  FC6
0022:  MOVLW  00
0024:  MOVWF  FC7
....................    setup_wdt(WDT_OFF); 
0026:  BCF    FD1.0
....................    setup_timer_0(RTCC_INTERNAL); 
0028:  MOVLW  80
002A:  MOVWF  FD5
....................    setup_timer_1(T1_DISABLED); 
002C:  CLRF   FCD
....................    setup_timer_2(T2_DISABLED,0,1); 
002E:  MOVLW  00
0030:  MOVWF  FCA
0032:  MOVLW  00
0034:  MOVWF  FCB
....................    setup_comparator(NC_NC_NC_NC); 
0036:  MOVLW  07
0038:  MOVWF  FB4
003A:  MOVF   F92,W
003C:  MOVWF  F92
003E:  MOVLW  03
0040:  MOVWF  00
0042:  DECFSZ 00,F
0044:  BRA    0042
0046:  MOVF   FB4,W
0048:  BCF    FA1.6
....................    setup_vref(FALSE);  
004A:  CLRF   FB5
....................    //set_adc_channel(0); 
.................... //Setup_Oscillator parameter not selected from Intr Oscillator Config tab 
....................  
....................    // TODO: USER CODE!!  
....................     
....................  
.................... }  
004C:  GOTO   0106 (RETURN)
.................... void program() 
.................... {  
....................   while(true)  
....................  {  
....................   //delay_us(50); 
....................    valor=read_adc();  
0050:  BSF    FC2.1
0052:  BTFSC  FC2.1
0054:  BRA    0052
0056:  MOVFF  FC4,04
....................     //int voltaje=(valor*5)/1023.0;  
....................     //output_high(valor);  
....................     if(valor == 1)  
005A:  DECFSZ 04,W
005C:  BRA    006C
....................      {  
....................       output_high(PIN_A3);  
005E:  BCF    F92.3
0060:  BSF    F89.3
....................       output_low(PIN_A1);  
0062:  BCF    F92.1
0064:  BCF    F89.1
....................       output_low(PIN_A2); 
0066:  BCF    F92.2
0068:  BCF    F89.2
....................      }  
....................       else if(valor == 2)  
006A:  BRA    00BA
006C:  MOVF   04,W
006E:  SUBLW  02
0070:  BNZ   0080
....................       {  
....................        output_high(PIN_A2);  
0072:  BCF    F92.2
0074:  BSF    F89.2
....................        output_low(PIN_A3);  
0076:  BCF    F92.3
0078:  BCF    F89.3
....................       output_low(PIN_A1);  
007A:  BCF    F92.1
007C:  BCF    F89.1
....................       }  
....................        else if(valor == 3)  
007E:  BRA    00BA
0080:  MOVF   04,W
0082:  SUBLW  03
0084:  BNZ   0094
....................       {  
....................        output_high(PIN_A2);  
0086:  BCF    F92.2
0088:  BSF    F89.2
....................        output_high(PIN_A3);  
008A:  BCF    F92.3
008C:  BSF    F89.3
....................       output_low(PIN_A1);  
008E:  BCF    F92.1
0090:  BCF    F89.1
....................       }  
....................        else if(valor == 4)  
0092:  BRA    00BA
0094:  MOVF   04,W
0096:  SUBLW  04
0098:  BNZ   00A8
....................       {  
....................        output_low(PIN_A2);  
009A:  BCF    F92.2
009C:  BCF    F89.2
....................        output_low(PIN_A3);  
009E:  BCF    F92.3
00A0:  BCF    F89.3
....................       output_high(PIN_A1);  
00A2:  BCF    F92.1
00A4:  BSF    F89.1
....................       }  
....................        else if(valor == 5)  
00A6:  BRA    00BA
00A8:  MOVF   04,W
00AA:  SUBLW  05
00AC:  BNZ   00BA
....................       {  
....................        output_low(PIN_A2);  
00AE:  BCF    F92.2
00B0:  BCF    F89.2
....................        output_high(PIN_A3);  
00B2:  BCF    F92.3
00B4:  BSF    F89.3
....................       output_high(PIN_A1);  
00B6:  BCF    F92.1
00B8:  BSF    F89.1
....................       }  
....................      //delay_ms(100); 
....................  } 
00BA:  BRA    0050
.................... } 
00BC:  GOTO   0108 (RETURN)

Configuration Fuses:
   Word  1: C83F   INTRC_IO IESO FCMEN PLL12 CPUDIV4 USBDIV
   Word  2: 0E38   NOBROWNOUT WDT128 NOWDT BORV20 PUT VREGEN
   Word  3: 8700   PBADEN CCP2C1 MCLR LPT1OSC
   Word  4: 0081   STVREN NODEBUG NOLVP NOXINST
   Word  5: C00F   NOPROTECT NOCPD NOCPB
   Word  6: E00F   NOWRT NOWRTD NOWRTC NOWRTB
   Word  7: 400F   NOEBTR NOEBTRB
